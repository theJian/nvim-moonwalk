local function nvim_cmp(opts, c)
  return {
    CmpItemAbbr = { fg = c.fg.normal },
    CmpItemAbbrDeprecated = { fg = c.fg.red, strikethrough = true },
    CmpItemAbbrMatch = { fg = c.fg.gold45, bold = true },
    CmpItemAbbrMatchFuzzy = { fg = c.fg.gold45, bold = true },
    CmpItemKind = { fg = c.fg.bold },
    CmpItemMenu = { fg = c.fg.purple_bold, italic = true },
    CmpItemKindClass = { link = '@type' },
    CmpItemKindColor = { link = '@constant' },
    CmpItemKindConstant = { link = '@constant' },
    CmpItemKindConstructor = { link = '@constructor' },
    CmpItemKindEnum = { link = '@type' },
    CmpItemKindEnumMember = { link = '@field' },
    CmpItemKindEvent = { link = '@type' },
    CmpItemKindField = { link = '@field' },
    CmpItemKindFile = { link = '@text.uri' },
    CmpItemKindFolder = { link = '@constant' },
    CmpItemKindFunction = { link = '@function' },
    CmpItemKindInterface = { link = '@type' },
    CmpItemKindKeyword = { link = '@keyword' },
    CmpItemKindMethod = { link = '@method' },
    CmpItemKindModule = { link = '@namespace' },
    CmpItemKindOperator = { link = '@operator' },
    CmpItemKindProperty = { link = '@property' },
    CmpItemKindReference = { link = '@type' },
    CmpItemKindSnippet = { link = '@constant' },
    CmpItemKimdStruct = { link = '@type' },
    CmpItemKindText = { link = '@text' },
    CmpItemKindTypeParameter = { link = '@type' },
    CmpItemKindUnit = { link = '@constant' },
    CmpItemKindValue = { link = '@constant' },
    CmpItemKindVariable = { link = '@variable' },
  }
end

return nvim_cmp
